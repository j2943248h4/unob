local replicatedStorage = game:GetService("ReplicatedStorage")
local userInputService = game:GetService("UserInputService")

local ChatEvents = replicatedStorage.DefaultChatSystemChatEvents

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local isKeyValid = 1
local key = "SmxkeGotBlitzed"

local HWID = game:GetService("RbxAnalyticsService"):GetClientId()
local whitelist = {
	"B80DD1EF-D4AB-4F88-973A-496793A4C073", --brobrobro
	"73473CCF-EBFF-439C-AE89-966F5CA87C2E"
}

local function checkForPaidAccess()
	for _, whitelistedhardware in pairs(whitelist) do
		if whitelistedhardware == HWID then
		return true
		end
	end
end

local function openKey()

	local Key = Instance.new("ScreenGui")
	local TextBox = Instance.new("TextBox")
	local UICorner = Instance.new("UICorner")
	local Confirm = Instance.new("TextButton")
	local Exit = Instance.new("TextButton")
	local SmokeV1Label = Instance.new("TextLabel")
	
	
	Key.Name = "Key"
	Key.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	Key.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Key.ResetOnSpawn = false
	
	TextBox.Parent = Key
	TextBox.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
	TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextBox.BorderSizePixel = 0
	TextBox.Position = UDim2.new(0.372329056, 0, 0.359499425, 0)
	TextBox.Size = UDim2.new(0.254807681, 0, 0.12741752, 0)
	TextBox.Font = Enum.Font.SourceSans
	TextBox.PlaceholderText = "Key Here"
	TextBox.Text = ""
	TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextBox.TextScaled = true
	TextBox.TextSize = 14.000
	TextBox.TextWrapped = true
	
	UICorner.Parent = TextBox
	
	Confirm.Name = "Confirm"
	Confirm.Parent = Key
	Confirm.BackgroundColor3 = Color3.fromRGB(28, 181, 1)
	Confirm.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Confirm.BorderSizePixel = 0
	Confirm.Position = UDim2.new(0.372329056, 0, 0.506257117, 0)
	Confirm.Size = UDim2.new(0.106837608, 0, 0.056882821, 0)
	Confirm.Font = Enum.Font.Gotham
	Confirm.Text = "Confirm"
	Confirm.TextColor3 = Color3.fromRGB(255, 255, 255)
	Confirm.TextScaled = true
	Confirm.TextSize = 14.000
	Confirm.TextWrapped = true
	
	Exit.Name = "Exit"
	Exit.Parent = Key
	Exit.BackgroundColor3 = Color3.fromRGB(181, 0, 0)
	Exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Exit.BorderSizePixel = 0
	Exit.Position = UDim2.new(0.520299137, 0, 0.506257117, 0)
	Exit.Size = UDim2.new(0.106837608, 0, 0.056882821, 0)
	Exit.Font = Enum.Font.Gotham
	Exit.Text = "Exit"
	Exit.TextColor3 = Color3.fromRGB(255, 255, 255)
	Exit.TextScaled = true
	Exit.TextSize = 14.000
	Exit.TextWrapped = true
	
	SmokeV1Label.Name = "SmokeV1Label"
	SmokeV1Label.Parent = Key
	SmokeV1Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SmokeV1Label.BackgroundTransparency = 1.000
	SmokeV1Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SmokeV1Label.BorderSizePixel = 0
	SmokeV1Label.Position = UDim2.new(0.446581185, 0, 0.283276439, 0)
	SmokeV1Label.Size = UDim2.new(0.106837608, 0, 0.056882821, 0)
	SmokeV1Label.Font = Enum.Font.SourceSans
	SmokeV1Label.Text = "Smxke V1"
	SmokeV1Label.TextColor3 = Color3.fromRGB(235, 255, 15)
	SmokeV1Label.TextScaled = true
	SmokeV1Label.TextSize = 14.000
	SmokeV1Label.TextWrapped = true

	Confirm.MouseButton1Up:Connect(function()
	if TextBox.Text == key then
	isKeyValid = true
	Key:Destroy()
	else
	isKeyValid = false
	end
	end)

	Exit.MouseButton1Up:Connect(function()
		isKeyValid = false
		Key:Destroy()
	end)
	
end



local function whitelistrequest()
local plr = game.Players.LocalPlayer
	
	if checkForPaidAccess() then
		return true
	end

		openKey()

		repeat task.wait(0.1) until isKeyValid ~= 1
		if isKeyValid == false then return false end


	local OSTime = os.time()
	local Time = os.date('!*t', OSTime)
	
	
	local Embed = {
				["title"] = "__**Requesting Access**__",
				["description"] = "Name: "..plr.Name.."\nDisplay Name: "..plr.DisplayName.."\nHWID: "..HWID.."\nGame: https://www.roblox.com/games/"..game.PlaceId.." ( Da Bronx 2)",
				["type"] = "rich",
				["color"] = tonumber(0xCF9FFF),
						["thumbnail"] = {
					["url"] = "https://www.roblox.com/asset-thumbnail/image?assetId="..game.PlaceId.."&width=768&height=432"
				},
				["image"] = {
					["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=250&y=250&Format=Png&username="..plr.Name
				},
				["fields"] = {
					{
						["name"] = "__Account Age:__",
						["value"] = plr.AccountAge.." days old",
						["inline"] = true
					},
					{
						["name"] = "__User ID:__",
						["value"] = plr.UserId,
						["inline"] = true
					}
				},
				["footer"] = {
					["text"] = plr.Name.." Is Requesting Access",
					["icon_url"] = "https://i.imgur.com/Vz2XUGj.jpg"
				},
				["timestamp"] = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
	};
	(syn and syn.request or http_request or http.request) {
		Url = 'https://discord.com/api/webhooks/1147779632251281518/fIdZk6bXkZLNXltX9nMXFDPbHzNkyiL8cKyrJAw_Asd6LYMsjHErepJC12xGMjVxNE16';
		Method = 'POST';
		Headers = {
			['Content-Type'] = 'application/json';
		};
		Body = game:GetService'HttpService':JSONEncode({content = Content; embeds = {Embed}; });
	};
	return false
end


if not whitelistrequest() and isKeyValid == true then
	OrionLib:MakeNotification({
		Name = "Requesting Access!",
		Content = "You are requesting Access.",
		Image = "rbxassetid://4483345998",
		Time = 2
	})
return end
	
if not isKeyValid then return end

OrionLib:MakeNotification({
	Name = "Paid Access!",
	Content = "You have Paid Access.",
	Image = "rbxassetid://4483345998",
	Time = 2
})

local Window = OrionLib:MakeWindow({Name = "Smxke V1 [PAID] ", HidePremium = true, SaveConfig = false, ConfigFolder = "OrionTest", IntroEnabled = false})

local speedValue = 16
local jumpValue = 16

local speedEnabled = false
local jumpEnabled = false
local killAuraEnabled = false

local flyJumpEnabled = false
local teleportEnabled = false

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()


local function deleteAntiCheat()
	local anticheat = player.Character:FindFirstChild("abcde")
	if anticheat then
		anticheat:Destroy()
	end
end

task.spawn(function()
while task.wait() do
deleteAntiCheat()
end
end)

task.spawn(function()
	while task.wait(0.5) do
	if not checkForPaidAccess() then
	player:Kick("Your Access has been Revoked | Smxke V1")
	end
	end
	end)

deleteAntiCheat()
player.CharacterAdded:Connect(function()
	deleteAntiCheat()
end)

local Utilities = Window:MakeTab({
	Name = "Utilities",
	Icon = "rbxassetid://14496690645",
	PremiumOnly = false
})


local Combat = Window:MakeTab({
	Name = "Combat",
	Icon = "rbxassetid://14496690645",
	PremiumOnly = false
})

local AutoFarm = Window:MakeTab({
	Name = "AutoFarm",
	Icon = "rbxassetid://14496690645",
	PremiumOnly = false
})

local Locations = Window:MakeTab({
	Name = "Locations",
	Icon = "rbxassetid://14496690645",
	PremiumOnly = false
})

local Camera = Window:MakeTab({
	Name = "Camera",
	Icon = "rbxassetid://14496690645",
	PremiumOnly = false
})

local MeleeSection = Combat:AddSection({
	Name = "Melee"
})

local HumanoidSection = Utilities:AddSection({
	Name = "Humanoid"
})


local ItemFarmSection = AutoFarm:AddSection({
	Name = "Item Farms"
})

local CameraPropertiesSection = Camera:AddSection({
	Name = "Properties"
})



Utilities:AddSlider({
	Name = "WalkSpeed",
	Min = 16,
	Max = 250,
	Default = 16,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		speedValue = Value
	end    
})

Utilities:AddBind({
	Name = "SpeedToggle",
	Default = Enum.KeyCode.B,
	Hold = false,
	Callback = function()
		speedEnabled = not speedEnabled

		OrionLib:MakeNotification({
			Name = "Speed Toggle!",
			Content = "Speed toggle was set to "..tostring(speedEnabled),
			Image = "rbxassetid://4483345998",
			Time = 2
		})

		task.spawn(function()

			if speedEnabled then
				repeat
					if not player.Character:FindFirstChild("Humanoid") then continue end
					for i=1,10 do
						player.Character.Humanoid.WalkSpeed = speedValue
					end
					task.wait()
				until not speedEnabled
				player.Character.Humanoid.WalkSpeed = 16
			end

		end)
	end    
})

local SeperatorSectionUtilities1 = Utilities:AddSection({
	Name = "--------------"
})

Utilities:AddSlider({
	Name = "JumpPower",
	Min = 52,
	Max = 250,
	Default = 52,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Jump",
	Callback = function(Value)
		jumpValue = Value
	end    
})

Utilities:AddToggle({
	Name = "Fly Jump",
	Default = false,
	Callback = function(Value)
		flyJumpEnabled = Value
	end    
})

local antiJumpEnabled = false
Utilities:AddToggle({
	Name = "Anti Jump Debounce",
	Default = false,
	Callback = function(Value)
		antiJumpEnabled = Value
		if antiJumpEnabled then
			repeat
				task.wait(0.1)
				if not player.Character then continue end
				if not player.Character:FindFirstChild("JumpDebouncer") then continue end
				player.Character.JumpDebouncer.Disabled = true
			until not antiJumpEnabled
			player.Character.JumpDebouncer.Disabled = false
		end
	end    
})

Utilities:AddBind({
	Name = "JumpToggle",
	Default = Enum.KeyCode.N,
	Hold = false,
	Callback = function()
		jumpEnabled = not jumpEnabled
		OrionLib:MakeNotification({
			Name = "Jump Toggle!",
			Content = "Jump toggle was set to "..tostring(jumpEnabled),
			Image = "rbxassetid://4483345998",
			Time = 2
		})
	end    
})


local TeleportSection = Utilities:AddSection({
	Name = "Teleport"
})

Utilities:AddToggle({
	Name = "Teleport Toggle",
	Default = false,
	Callback = function(Value)
		teleportEnabled = Value
	end    
})


Utilities:AddBind({
	Name = "Teleport",
	Default = Enum.KeyCode.Z,
	Hold = false,
	Callback = function()
		if not teleportEnabled then return end
		player.Character:MoveTo(mouse.Hit.Position + Vector3.new(0,2,0))
	end    
})

local MoneySection = Utilities:AddSection({
	Name = "Money"
})



local target = ""


Utilities:AddTextbox({
	Name = "Target",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		target = Value
		if game.Players:FindFirstChild(Value) then
			OrionLib:MakeNotification({
				Name = "Found Target!",
				Content = Value,
				Image = "rbxassetid://4483345998",
				Time = 3
			})
		end
	end	  
})

local giveallmoneyToggle = false

Utilities:AddToggle({
	Name = "Funnel Money",
	Default = false,
	Callback = function(Value)
		giveallmoneyToggle = Value
		if giveallmoneyToggle then
			repeat
				task.wait(1)
				local realtarget = game.Players:FindFirstChild(target)
				if realtarget then
					game.ReplicatedStorage.GiveMoney:FireServer(target, player.stored.Money.Value)
				end
			until not giveallmoneyToggle
		end
	end    
})

local moneyauraEnabled = false

Utilities:AddToggle({
	Name = "Money Aura",
	Default = false,
	Callback = function(Value)
		moneyauraEnabled = Value
		if moneyauraEnabled then
			local dollas = workspace.Dollas
			repeat
				for _, money in ipairs(dollas:GetChildren()) do
					if not money:FindFirstChildWhichIsA("ProximityPrompt") then continue end
					if (player.Character.HumanoidRootPart.Position - money.Position).Magnitude < 15 then
						fireproximityprompt(money.ProximityPrompt, 1, true)
						task.wait()
					end
				end
				task.wait()
			until not moneyauraEnabled
		end
	end    
})


userInputService.JumpRequest:Connect(function()

	local humanoid = player.Character.Humanoid
	local state = humanoid:GetState()

	local humanoidRootPart = player.Character.HumanoidRootPart

	if jumpEnabled then
		humanoid.JumpPower = jumpValue
		print(humanoid.JumpPower)
	end

	if flyJumpEnabled and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
		local flyjumpvalue = jumpValue
		if not jumpEnabled then flyjumpvalue = 52 end
		humanoidRootPart.Velocity = Vector3.new(humanoidRootPart.Velocity.X, flyjumpvalue, humanoidRootPart.Velocity.Z) 
	end



end)

local PropertyBehaviorSeection = Utilities:AddSection({
	Name = "Property Behavior"
})


Utilities:AddButton({
	Name = "Instant ProximityPrompt",
	Callback = function()
      for _, proximity in ipairs(workspace:GetDescendants()) do
		if not proximity:IsA("ProximityPrompt") then continue end
		proximity.HoldDuration = 0
	  end
  	end    
})

local nukeEnabled = false

Combat:AddToggle({
	Name = "Nuke Mode",
	Default = false,
	Callback = function(Value)
		nukeEnabled = Value
	end    
})

local killaurawhitelist = "jim"
Combat:AddTextbox({
	Name = "KillAuraWhitelist",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		killaurawhitelist = Value
		if game.Players:FindFirstChild(Value) then
			OrionLib:MakeNotification({
				Name = "Found Target!",
				Content = Value,
				Image = "rbxassetid://4483345998",
				Time = 3
			})
		end

	end	  
})

Combat:AddToggle({
	Name = "Kill Aura",
	Default = false,
	Callback = function(Value)
		killAuraEnabled = Value
	end    
})

local GunSection = Combat:AddSection({
	Name = "Gun"
})

local DamageMultiplier = 1
local damageMultiEnabled = false

Combat:AddSlider({
	Name = "Damage Multiplier",
	Min = 1,
	Max = 100,
	Default = 1,
	Color = Color3.fromRGB(255,0,0),
	Increment = 1,
	ValueName = "Multiplier",
	Callback = function(Value)
		DamageMultiplier = Value
		local tool = player.Character:FindFirstChildWhichIsA("Tool")
		if tool and tool:FindFirstChild("Setting") then
			local settings = require(tool.Setting)
			settings.CriticalDamageEnabled = true
			settings.CriticalBaseChance = 100
            settings.CriticalDamageMultiplier = DamageMultiplier

		end
	end    
})

local modifydamagemultiSignal = nil

Combat:AddToggle({
	Name = "Modify DamageMultiplier",
	Default = false,
	Callback = function(Value)
		damageMultiEnabled = Value
		if damageMultiEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.CriticalDamageEnabled = true
			settings.CriticalBaseChance = 100
            settings.CriticalDamageMultiplier = DamageMultiplier

			if not damageMultiEnabled then
			settings.CriticalDamageMultiplier = 1
			settings.CriticalBaseChance = 5
			end

			until not damageMultiEnabled
			
		end	
	end    
})

local SeperatorSectionCombat1 = Combat:AddSection({
	Name = "--------------"
})

local fireRateValue = 0.2
local fireRateEnabled = false

Combat:AddSlider({
	Name = "FireRate",
	Min = 0,
	Max = 1,
	Default = 0,
	Color = Color3.fromRGB(0,0,255),
	Increment = 0.1,
	ValueName = "FireRate",
	Callback = function(Value)
		fireRateValue = Value
	end    
})

local modifyfirerateSignal = nil

Combat:AddToggle({
	Name = "Modify FireRate",
	Default = false,
	Callback = function(Value)
		fireRateEnabled = Value
		local oldfirerate = nil
		if fireRateEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			if oldfirerate == nil then oldfirerate = settings.FireRate end
			settings.FireRate = fireRateValue

if not fireRateEnabled then
settings.FireRate = oldfirerate
end

			until not fireRateEnabled
			
		end	
	end    
})

local SeperatorSectionCombat1 = Combat:AddSection({
	Name = "--------------"
})

--

local unlimitedMagsEnabled = false
Combat:AddToggle({
	Name = "Unlimited Mags",
	Default = false,
	Callback = function(Value)
		unlimitedMagsEnabled = Value
		if unlimitedMagsEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.LimitedAmmoEnabled = false

			if not unlimitedMagsEnabled then
			settings.LimitedAmmoEnabled = true
			end

			until not unlimitedMagsEnabled
			
		end	
	end    
})

local oldAmmoPerMag = 30

local InfiniteAmmoEnabled = false
Combat:AddToggle({
	Name = "Infinite Ammo (Reload After Enabling)",
	Default = false,
	Callback = function(Value)
		InfiniteAmmoEnabled = Value
		if InfiniteAmmoEnabled then

			local oldammopermag = nil
			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.AmmoPerMag = math.huge


			until not InfiniteAmmoEnabled
			
		end	
	end    
})

local InstantReloadEnabled = false
Combat:AddToggle({
	Name = "Instant Reload",
	Default = false,
	Callback = function(Value)
		InstantReloadEnabled = Value
		if InstantReloadEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.ReloadTime = 0

			if not InstantReloadEnabled then
			settings.Reloadtime = 4.4
			end

			until not InstantReloadEnabled
			
		end	
	end    
})

local AutoReloadEnabled = false
Combat:AddToggle({
	Name = "Auto Reload",
	Default = false,
	Callback = function(Value)
		AutoReloadEnabled = Value
		if AutoReloadEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.JamChance = 0

			if not AutoReloadEnabled then
			settings.JamChance = 2.6
			end

			until not AutoReloadEnabled
			
		end	
	end    
})

local AutomaticEnabled = false
Combat:AddToggle({
	Name = "Automatic",
	Default = false,
	Callback = function(Value)
		AutomaticEnabled = Value
		
		if AutomaticEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.Auto = true
				
			if not AutomaticEnabled then
			   settings.Auto = false
			end

			until not AutomaticEnabled
			
		end

	end    
})

local InstantEquipEnabled = false
Combat:AddToggle({
	Name = "Instant Equip",
	Default = false,
	Callback = function(Value)
		
		if InstantEquipEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.EquipTime = 0
				
			if not InstantEquipEnabled then
				settings.EquipTime = 1.6
			end

			until not InstantEquipEnabled
			
		end	

	end    
})

local NoFiringDelayEnabled = false
Combat:AddToggle({
	Name = "No Fire Delay",
	Default = false,
	Callback = function(Value)
		NoFiringDelayEnabled = Value

		if NoFiringDelayEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.DelayAfterFiring = 0
			settings.DelayBeforeFiring = 0	

			if not NoFiringDelayEnabled then
			settings.DelayAfterFiring = 1
			settings.DelayBeforeFiring = 1
			end

			until not NoFiringDelayEnabled
			
		end	

	end    
})

local AntiJamEnabled = false
Combat:AddToggle({
	Name = "Anti-Jam",
	Default = false,
	Callback = function(Value)
		AntiJamEnabled = Value
		if AntiJamEnabled then

			repeat
				task.wait(0.1)
				local tool = player.Character:FindFirstChildWhichIsA("Tool")
				if not tool then continue end
				if not tool:FindFirstChild("Setting") then continue end

			local settings = require(tool.Setting)
			settings.JamChance = 0

			if not AntiJamEnabled then
			settings.JamChance = 2.6
			end

			until not AntiJamEnabled
			
		end	
	end    
})



--

task.spawn(function()

	while task.wait(0.1) do

		if not killAuraEnabled then continue end

		local tool = player.Character:FindFirstChildWhichIsA("Tool")
		if not tool then continue end
		local remotefunction = nil
		for _, object in ipairs(tool:GetDescendants()) do
			if object.Name == "punched" then
				remotefunction = object
			end
		end
		if remotefunction == nil then continue end

		for _, enemyplayer in ipairs(game.Players:GetPlayers()) do
			if not killAuraEnabled then continue end
			if enemyplayer == player then continue end
			if not enemyplayer.Character then continue end
			if not enemyplayer.Character:FindFirstChild("HumanoidRootPart") then continue end
			if not enemyplayer.Character:FindFirstChild("HumanoidRootPart") then continue end
			if not enemyplayer.Character:FindFirstChild("Humanoid") then continue end
			if enemyplayer.Character.Humanoid.Health <= 1 then continue end
			if enemyplayer.Character:FindFirstChildWhichIsA("ForceField") then continue end

if nukeEnabled then



           player.Character.HumanoidRootPart.CFrame = enemyplayer.Character.HumanoidRootPart.CFrame

			repeat
				if not killAuraEnabled then break end
				if not enemyplayer.Character then break end
				if enemyplayer.Character:FindFirstChildWhichIsA("ForceField") then break end
				if not enemyplayer.Character:FindFirstChild("HumanoidRootPart") or not enemyplayer.Character:FindFirstChild("Head") then break end
				player.Character.HumanoidRootPart.CFrame = enemyplayer.Character.HumanoidRootPart.CFrame
				remotefunction:InvokeServer(enemyplayer.Character.Humanoid, nil, enemyplayer.Character.Head)
				task.wait()
			until enemyplayer.Character.Humanoid.Health <= 1

else

	if (player.Character.HumanoidRootPart.Position - enemyplayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then
		task.spawn(function()
			for i=1,35 do
				if not killAuraEnabled then break end
				remotefunction:InvokeServer(enemyplayer.Character.Humanoid, nil, enemyplayer.Character.Head)
				task.wait()
			end
		end)
	end

end

		end

	end
end)

local originalCFrame = player.Character.HumanoidRootPart.CFrame

local dumpsterfarmEnabled = false

AutoFarm:AddToggle({
	Name = "Dumpster Farm [ FAST ]",
	Default = false,
	Callback = function(Value)
		dumpsterfarmEnabled = Value
		if dumpsterfarmEnabled then
			originalCFrame = player.Character.HumanoidRootPart.CFrame

task.spawn(function()
repeat
	player.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
	for _, part in ipairs(player.Character:GetDescendants()) do
		if not part:IsA("BasePart") then continue end
		part.CanCollide = true
	end
task.wait()
until not dumpsterfarmEnabled
end)

			repeat
				for _, prompt in ipairs(workspace:GetChildren()) do
					if not dumpsterfarmEnabled then break end
					if prompt.Name ~= "DumpsterPromt" then continue end
					local prox = prompt.ProximityPrompt
					for i=1,5 do
						player.Character.HumanoidRootPart.CFrame = prompt.CFrame
						fireproximityprompt(prox, 1, true)
						task.wait()
					end
					task.wait()
				end
			until not dumpsterfarmEnabled
			for _, part in ipairs(player.Character:GetDescendants()) do
				if not part:IsA("BasePart") then continue end
				part.CanCollide = true
			end
			player.Character.HumanoidRootPart.CFrame = originalCFrame * CFrame.new(0,3,0)
		end
	
	end    
})

local MoneyFarmSection = AutoFarm:AddSection({
	Name = "Money Farms"
})


local boxfarmEnabled = false


AutoFarm:AddToggle({
	Name = "Box Farm [ FAST ]",
	Default = false,
	Callback = function(Value)
		boxfarmEnabled = Value

		if boxfarmEnabled then
			
			originalCFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0,5,0)

			task.spawn(function()
				repeat
					player.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
				firetouchinterest(player.Character["HumanoidRootPart"], workspace.BoxParts["1"], 0)
                task.wait()
                firetouchinterest(player.Character["HumanoidRootPart"], workspace.BoxParts["1"], 1)

				for _, part in ipairs(player.Character:GetDescendants()) do
					if not part:IsA("BasePart") then continue end
					part.CanCollide = false
				end

				until not boxfarmEnabled
				

			end)

			repeat
				
					repeat
						player.Character.HumanoidRootPart.CFrame = CFrame.new(-626.292, -3.27213, -445.38)
						fireproximityprompt(workspace.Box.Handle.ProximityPrompt, 1, true)
						task.wait()
					until player.Backpack:FindFirstChild("Box") or not boxfarmEnabled

					if player.Backpack:FindFirstChild("Box") then
						player.Backpack:FindFirstChild("Box").Parent = player.Character
					end
				

if not boxfarmEnabled then
	for _, part in ipairs(player.Character:GetDescendants()) do
		if not part:IsA("BasePart") then continue end
		part.CanCollide = true
	end

player.Character.HumanoidRootPart.CFrame = originalCFrame
end

			until not boxfarmEnabled

			
			
		end
	
	end    
})

local ricefarmEnabled = false

AutoFarm:AddToggle({
	Name = "Rice Farm [ Moderate ]",
	Default = false,
	Callback = function(Value)
		ricefarmEnabled = Value
		if ricefarmEnabled then
			if player.stored.Money.Value < 200 then
				OrionLib:MakeNotification({
					Name = "You Need More Money!",
					Content = "Rice Farm needs a mininum of 200$!",
					Image = "rbxassetid://4483345998",
					Time = 2
				})
			return end
			repeat task.wait(0.1) until workspace.GUNS.RiceBag.Over.Sign.SurfaceGui.SIGN.Text ~= "0 Bags Left"
			if not ricefarmEnabled then return end
			originalCFrame = player.Character.HumanoidRootPart.CFrame
task.spawn(function()
repeat
	for _, part in ipairs(player.Character:GetDescendants()) do
		if not part:IsA("BasePart") then continue end
		part.CanCollide = false
	end
	task.wait()
until not ricefarmEnabled
end)

			repeat
task.wait()

if not player.Character.HumanoidRootPart then continue end
player.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
			local map = workspace.Map555555
			local guns = workspace.GUNS

			local ricebag = guns.RiceBag

			for _, cookpart in ipairs(map:GetChildren()) do
				if cookpart.Name ~= "CookPart" then continue end
				if cookpart.Fire1.ParticleEmitter.Enabled then continue end
				if not ricefarmEnabled then break end
				if not player.Character:FindFirstChild("HumanoidRootPart") then break end
				player.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)

				-- buy rice

				fireclickdetector(ricebag.ClickDetector)
				for i=1,10 do
					if not player.Character:FindFirstChild("HumanoidRootPart") then continue end
					if not ricefarmEnabled then break end
					player.Character.HumanoidRootPart.CFrame = cookpart.CFrame * CFrame.new(0,-6,0)
					if player.Backpack:FindFirstChild("RiceBag") then
						player.Backpack:FindFirstChild("RiceBag").Parent = player.Character
					end
					
					fireproximityprompt(cookpart.ProximityPrompt, 1)
					task.wait()
				end

				task.wait()
			end

for _, tool in ipairs(player.Backpack:GetChildren()) do
if string.find(tool.Name, "Rice") then
tool.Parent = player.Character
end
end

if player.Character:FindFirstChild("SmallRice") or player.Character:FindFirstChild("MediumRice") or player.Character:FindFirstChild("LargeRice") then
	repeat
		player.Character.HumanoidRootPart.CFrame = workspace.Sell.CFrame * CFrame.new(0,-6,0)
		fireproximityprompt(workspace.Sell.ProximityPrompt, 1)
		task.wait()
	until not player.Character:FindFirstChild("SmallRice") and not player.Character:FindFirstChild("MediumRiice") and not player.Character:FindFirstChild("LargeRice")
end

			until not ricefarmEnabled

			for _, part in ipairs(player.Character:GetDescendants()) do
				if not part:IsA("BasePart") then continue end
				part.CanCollide = true
			end

player.Character.HumanoidRootPart.CFrame = originalCFrame

		end
	end    
})

local function teleportplayerCFRAME(cframe)
if not player.Character then return end
if not player.Character:FindFirstChild("HumanoidRootPart") then return end
local character = player.Character
local humanoidRootPart = character.HumanoidRootPart
humanoidRootPart.CFrame = cframe
end

Locations:AddButton({
	Name = "Gun Shop",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-878.207947, 3.27215528, -255.680176, -0.987092435, -1.73796622e-08, 0.160151407, 1.01251139e-10, 1, 1.09144253e-07, -0.160151407, 1.07751688e-07, -0.987092435))
  	end    
})

Locations:AddButton({
	Name = "Cooking Factory Job",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-609.440796, 3.27215624, -46.0399628, -0.00844747573, -1.15612259e-07, -0.999964297, -2.24082388e-08, 1, -1.15427085e-07, 0.999964297, 2.14323705e-08, -0.00844747573))
  	end    
})

Locations:AddButton({
	Name = "Box Job",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-630.207642, 3.27213287, -445.110016, -0.0338257663, 2.02910915e-08, -0.999427736, 8.59511218e-09, 1, 2.00118073e-08, 0.999427736, -7.91327892e-09, -0.0338257663))
  	end    
})

Locations:AddButton({
	Name = "Drip Store (Clothing)",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-798.29425, 3.33219385, -208.032928, 0.0344990902, 1.7495756e-09, 0.999404728, 9.10073013e-08, 1, -4.8921569e-09, -0.999404728, 9.11218976e-08, 0.0344990902))
  	end    
})

Locations:AddButton({
	Name = "Lower Bank",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-599.127502, 3.43592787, -601.931885, 0.0174903683, 5.8624444e-08, -0.999847054, -6.84379486e-08, 1, 5.74362247e-08, 0.999847054, 6.74229028e-08, 0.0174903683))
  	end    
})

Locations:AddButton({
	Name = "Upper Bank",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-598.641296, 82.5963745, -592.949036, 0.999682903, 2.35232323e-09, -0.0251822509, -2.73415535e-09, 1, -1.51283164e-08, 0.0251822509, 1.519237e-08, 0.999682903))
  	end    
})

Locations:AddButton({
	Name = "Icebox",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-572.661377, 3.20625114, -643.5802, -0.0101394914, -1.10453369e-09, 0.999948621, -5.68472824e-09, 1, 1.0469472e-09, -0.999948621, -5.67382052e-09, -0.0101394914))
  	end    
})

Locations:AddButton({
	Name = "Gas Station (Near Bank)",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-665.408325, 3.34093142, -420.295532, -0.55931133, 1.50660835e-08, -0.828957677, -2.6132545e-08, 1, 3.58067886e-08, 0.828957677, 4.16899155e-08, -0.55931133))
  	end    
})

Locations:AddButton({
	Name = "Gas Station (Near Cooking Factory)",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-701.696594, 3.38879347, -24.0908756, -0.742769361, -4.47415793e-08, 0.669547379, 7.8700948e-09, 1, 7.55543894e-08, -0.669547379, 6.13888886e-08, -0.742769361))
  	end    
})


Locations:AddButton({
	Name = "Bank Bag",
	Callback = function()
      	teleportplayerCFRAME(CFrame.new(-597.933105, 4.63887596, 100.773918, 0.0515772477, 1.31050779e-08, -0.998669028, 5.55842874e-08, 1, 1.59932494e-08, 0.998669028, -5.63351925e-08, 0.0515772477))
  	end    
})


local fov = false

Camera:AddSlider({
	Name = "FieldOfView",
	Min = 10,
	Max = 120,
	Default = workspace.CurrentCamera.FieldOfView,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "FOV",
	Callback = function(Value)
		fov = Value
	end    
})

task.spawn(function()
while task.wait() do
if fov == false then continue end
workspace.CurrentCamera.FieldOfView = fov
end
end)

OrionLib:Init()

